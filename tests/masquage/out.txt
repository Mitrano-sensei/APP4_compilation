.malloc 
resn 2 
push 0
dup 
set 1 ; p 
drop
get 1 ; p 
read 
dup 
set 2 ; r 
drop
get 1 ; p 
read 
get 0 ; n 
add
dup 
get 1 ; p 
write 
drop
get 2 ; r 
ret ; DEAD CODE FROM NOW
push 0 
ret 

.free 
resn 0 
push 0 
ret 

.print_inner 
resn 0 
get 0 ; n 
push 9
cmpgt
jumpf l0 
prep print_inner 
get 0 ; n 
push 10
div
call 1
drop
prep print_inner 
get 0 ; n 
push 10
mod
call 1
drop
jump l1 
.l0 
get 0 ; n 
push 48
add
send 
.l1
push 0 
ret 

.print 
resn 0 
prep print_inner 
get 0 ; n 
call 1
drop
push 10
send 
push 0 
ret 

.minus 
resn 0 
get 0 ; n 
push 0
cmpeq
jumpf l2 
push 1
ret ; DEAD CODE FROM NOW
jump l3 
.l2 
prep minus 
get 0 ; n 
push 1
sub
call 1
ret ; DEAD CODE FROM NOW
.l3
push 0 
ret 

.pow 
resn 0 
get 1 ; b 
push 1
cmpeq
jumpf l4 
get 0 ; a 
ret ; DEAD CODE FROM NOW
jump l5 
.l4 
get 0 ; a 
prep pow 
get 0 ; a 
get 1 ; b 
push 1
sub
call 2
mul
ret ; DEAD CODE FROM NOW
.l5
push 0 
ret 

.main 
resn 3 
push 0
dup 
set 0 ; a 
drop
push 1
jumpf l6 
push 10
dup 
set 1 ; a 
drop
prep print 
get 1 ; a 
call 1
drop
jump l7 
.l6 
.l7
prep print 
get 0 ; a 
call 1
drop
get 0 ; a 
push 0
cmpeq
ret ; DEAD CODE FROM NOW
push 0 
ret 


;RUNTIME
.adrof 
get -1
get 0 
sub 
push 1 
sub 
ret
;RUNTIME

.start
prep main
call 0
dbg 
halt