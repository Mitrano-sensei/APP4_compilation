.malloc 
resn 2 
push 0
dup 
set 1 ; p 
drop
get 1 ; p 
read 
dup 
set 2 ; r 
drop
get 1 ; p 
read 
get 0 ; n 
add
dup 
get 1 ; p 
write 
drop
get 2 ; r 
ret ; DEAD CODE FROM NOW
push 0 
ret 

.free 
resn 0 
push 0 
ret 

.print_inner 
resn 0 
get 0 ; n 
push 9
cmpgt
jumpf l0 
prep print_inner 
get 0 ; n 
push 10
div
call 1
drop
prep print_inner 
get 0 ; n 
push 10
mod
call 1
drop
jump l1 
.l0 
get 0 ; n 
push 48
add
send 
.l1
push 0 
ret 

.print 
resn 0 
prep print_inner 
get 0 ; n 
call 1
drop
push 10
send 
push 0 
ret 

.main 
resn 3 
push 0
dup 
set 2 ; res 
drop
push 0
dup 
set 0 ; i 
drop
push 0
dup 
set 1 ; j 
drop
.l3 
get 0 ; i 
push 10
cmplt
jumpf l4 
get 0 ; i 
push 1
add
dup 
set 0 ; i 
drop
push 0
dup 
set 1 ; j 
drop
.l7 
get 1 ; j 
push 10
cmplt
jumpf l8 
get 1 ; j 
push 1
add
dup 
set 1 ; j 
drop
jump l9 
.l8 
jump l6
.l9
jump l7
.l6
jump l5 
.l4 
jump l2
.l5
jump l3
.l2
prep print 
push 0
call 1
drop
prep print 
get 0 ; i 
push 10
cmpeq
get 1 ; j 
push 10
cmpeq
and
call 1
drop
.l11 
push 0
dup 
set 1 ; j 
drop
get 0 ; i 
push 1
add
dup 
set 0 ; i 
drop
.l13 
get 1 ; j 
push 1
add
dup 
set 1 ; j 
drop
get 1 ; j 
push 10
cmplt
not
jumpf l14 
jump l12
jump l15 
.l14 
.l15
jump l13
.l12
get 0 ; i 
push 10
cmplt
not
jumpf l16 
jump l10
jump l17 
.l16 
.l17
jump l11
.l10
prep print 
get 0 ; i 
push 11
cmpeq
get 1 ; j 
push 10
cmpeq
and
call 1
drop
push 0
dup 
set 2 ; res 
drop
.l19 
.l21 
get 2 ; res 
push 1
add
dup 
set 2 ; res 
drop
get 1 ; j 
push 1
add
dup 
set 1 ; j 
get 1 ; j 
push 10
cmplt
not
jumpf l22 
jump l20
jump l23 
.l22 
.l23
jump l21
.l20
get 0 ; i 
push 1
add
dup 
set 0 ; i 
get 0 ; i 
push 10
cmplt
not
jumpf l24 
jump l18
jump l25 
.l24 
.l25
jump l19
.l18
get 2 ; res 
push 100
cmpeq
ret ; DEAD CODE FROM NOW
push 0 
ret 


;RUNTIME
.adrof 
get -1
get 0 
sub 
push 1 
sub 
ret
;RUNTIME

.start
prep main
call 0
dbg 
halt