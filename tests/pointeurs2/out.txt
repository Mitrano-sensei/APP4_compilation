.malloc 
resn 2 
push 0
dup 
set 1 ; p 
drop
get 1 ; p 
read 
dup 
set 2 ; r 
drop
get 1 ; p 
read 
get 0 ; n 
add
dup 
get 1 ; p 
write 
drop
get 2 ; r 
ret ; DEAD CODE FROM NOW
push 0 
ret 

.free 
resn 0 
push 0 
ret 

.print_inner 
resn 0 
get 0 ; n 
push 9
cmpgt
jumpf l0 
prep print_inner 
get 0 ; n 
push 10
div
call 1
drop
prep print_inner 
get 0 ; n 
push 10
mod
call 1
drop
jump l1 
.l0 
get 0 ; n 
push 48
add
send 
.l1
push 0 
ret 

.print 
resn 0 
get 0 ; n 
push 0
cmplt
jumpf l2 
push 45
send 
push 0
get 0 ; n 
sub
dup 
set 0 ; n 
drop
jump l3 
.l2 
.l3
prep print_inner 
get 0 ; n 
call 1
drop
push 10
send 
push 0 
ret 

.main 
resn 3 
push 1
dup 
set 0 ; a 
drop
push 2
dup 
set 1 ; b 
drop
prep adrof 
push 0
call 1 
dup 
set 2 ; c 
drop
prep print 
prep adrof 
push 0
call 1 
push 65533
cmpeq
call 1
drop
prep print 
get 2 ; c 
prep adrof 
push 0
call 1 
cmpeq
call 1
drop
prep print 
get 2 ; c 
read 
get 0 ; a 
cmpeq
call 1
drop
prep adrof 
push 1
call 1 
dup 
set 2 ; c 
drop
prep print 
prep adrof 
push 1
call 1 
push 65532
cmpeq
call 1
drop
prep print 
get 2 ; c 
prep adrof 
push 1
call 1 
cmpeq
call 1
drop
prep print 
get 2 ; c 
read 
get 1 ; b 
cmpeq
call 1
drop
push 0 
ret 


;RUNTIME
.adrof 
get -1
get 0 
sub 
push 1 
sub 
ret
;RUNTIME

.start
prep main
call 0
dbg 
halt